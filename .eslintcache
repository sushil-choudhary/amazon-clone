[{"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\reducer.js":"1","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\StateProvider.js":"2","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\firebase.js":"3","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\index.js":"4","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\App.js":"5","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\footer\\Footer.js":"6","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\payment\\Payment.js":"7","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\deliveryAddress\\DeliveryAddress.js":"8","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\order\\Order.js":"9","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\carousels\\Carousels.js":"10","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\header\\Header.js":"11","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\home\\Home.js":"12","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\login\\Login.js":"13","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\checkout\\Checkout.js":"14","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\orders\\Orders.js":"15","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\signup\\Signup.js":"16","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\axios.js":"17","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\product\\Product.js":"18","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\checkout\\CheckoutProduct.js":"19","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\subtotal\\Subtotal.js":"20","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\amazonpay\\header\\HeaderPay.js":"21","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\amazonpay\\home\\HomePay.js":"22"},{"size":1491,"mtime":1611214170792,"results":"23","hashOfConfig":"24"},{"size":477,"mtime":1609748721838,"results":"25","hashOfConfig":"24"},{"size":693,"mtime":1612255973450,"results":"26","hashOfConfig":"24"},{"size":546,"mtime":1612336449825,"results":"27","hashOfConfig":"24"},{"size":2674,"mtime":1612341652889,"results":"28","hashOfConfig":"24"},{"size":2165,"mtime":1612329250517,"results":"29","hashOfConfig":"24"},{"size":4921,"mtime":1612331939360,"results":"30","hashOfConfig":"24"},{"size":6505,"mtime":1612339909316,"results":"31","hashOfConfig":"24"},{"size":1219,"mtime":1612330851939,"results":"32","hashOfConfig":"24"},{"size":1242,"mtime":1612333597802,"results":"33","hashOfConfig":"24"},{"size":2595,"mtime":1612498715907,"results":"34","hashOfConfig":"24"},{"size":15703,"mtime":1612329894750,"results":"35","hashOfConfig":"24"},{"size":7909,"mtime":1612529022185,"results":"36","hashOfConfig":"24"},{"size":1848,"mtime":1612341421698,"results":"37","hashOfConfig":"24"},{"size":1082,"mtime":1612331386442,"results":"38","hashOfConfig":"24"},{"size":7964,"mtime":1612331475265,"results":"39","hashOfConfig":"24"},{"size":145,"mtime":1612331472678,"results":"40","hashOfConfig":"24"},{"size":2172,"mtime":1612337391188,"results":"41","hashOfConfig":"24"},{"size":1279,"mtime":1612329198870,"results":"42","hashOfConfig":"24"},{"size":1438,"mtime":1612330750117,"results":"43","hashOfConfig":"24"},{"size":858,"mtime":1612343236186,"results":"44","hashOfConfig":"24"},{"size":489,"mtime":1612343355041,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"kbvq47",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\reducer.js",[],["100","101"],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\StateProvider.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\firebase.js",[],["102","103"],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\index.js",[],["104","105"],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\App.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\footer\\Footer.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\payment\\Payment.js",["106"],"import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { useStateValue } from \"../../StateProvider\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"../../axios\"\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"../../reducer\";\nimport { db } from \"../../firebase\";\nimport DeliveryAddress from '../deliveryAddress/DeliveryAddress';\n\nfunction Payment() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n    \n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        // generate the special stripe secret which allows us to charge a customer\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n        getClientSecret();\n    }, [basket])\n    console.log('THE SECRET IS >>>', clientSecret)\n    console.log('👱', user)\n\n    const handleSubmit = async (event) => {\n        // all the  stripe stuff...\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // paymentIntent = payment confirmation\n            db\n                .collection('users')\n                .doc(user?.uid)\n                .collection('orders')\n                .doc(paymentIntent.id)\n                .set({\n                    basket: basket,\n                    amount: paymentIntent.amount,\n                    created: paymentIntent.created\n                })\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n            dispatch({\n                type: 'EMPTY_BASKET'\n            })\n            history.replace('/orders')\n        })\n    }\n\n    const handleChange = event => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n       <div className='payment'>\n            <div className='payment__container'>\n                <h1>Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)</h1>\n                    {/* Payment section - Payment method */}\n                <div className='payment__section'>\n                    <DeliveryAddress className=\"address\"/>\n                        <div className=\"payment__details\">\n                            <div className=\"payment__title\">\n                                <h3>Payment Method</h3>\n                            </div><hr/>\n                                {/* Stripe magic will go */}\n                                <form onSubmit={handleSubmit}>\n                                    <div className='payment__priceContainer'>                                       \n                                        <CurrencyFormat\n                                            renderText={(value) => (\n                                                <h3>Order Total: {value}</h3>\n                                            )}\n                                            decimalScale={2}\n                                            value={getBasketTotal(basket)}\n                                            displayType={\"text\"}\n                                            thousandSeparator={true}\n                                            prefix={\"$\"}\n                                        />\n                                    </div>                               \n                                        <CardElement onChange={handleChange} className=\"card\"/>\n                                        <button disabled={processing || disabled || succeeded}>\n                                            <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                        </button>\n                                        {/* Errors */}\n                                        {error && <div>{error}</div>}\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n            </div>   \n    )\n}\n\nexport default Payment","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\deliveryAddress\\DeliveryAddress.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\order\\Order.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\carousels\\Carousels.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\header\\Header.js",["107"],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\home\\Home.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\login\\Login.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\checkout\\Checkout.js",["108"],"import React from 'react';\nimport \"./Checkout.css\";\nimport CheckoutProduct from './CheckoutProduct';\nimport { useStateValue } from '../../StateProvider';\nimport Subtotal from '../subtotal/Subtotal';\nimport { Link } from 'react-router-dom';\n\nfunction Checkout() {\n    const[{ basket, user }, dispatch] = useStateValue();\n\n    return (\n        <div className=\"checkout\">\n            <div className=\"checkout__left\">\n                <img className=\"checkout__ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" alt=\"\"/>\n                    <div>\n                        <h3>Hello, {user?.email}</h3>\n                        <p>\n                            <strong>Pay faster for all your shopping needs with </strong>\n                            <Link to =\"amazonpay\">Amazon Pay balance</Link><br/>\n                            {/* <a href=\"https://pay.amazon.com/\"className=\"checkout__heading\">Amazon Pay balance</a><br />     */}\n                            Get Instant refund on cancellations | Zero payment failures\n                        </p>\n                        <h2 className=\"checkout__title\">\n                            Shopping Cart\n                        </h2>\n                        {basket.map(item => (                        \n                        <CheckoutProduct \n                            id={item.id}\n                            title={item.title}\n                            image={item.image}\n                            price={item.price}\n                            rating={item.rating} \n                        />\n                        )\n                        )}\n                    </div>\n            </div>\n\n            <div className=\"checkout__right\">\n                <Subtotal />\n            </div>\n\n        </div>\n        \n    )\n}\n\nexport default Checkout\n","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\orders\\Orders.js",["109","110"],"import React, { useState, useEffect } from 'react';\nimport { db } from \"../../firebase\";\nimport './Orders.css';\nimport { useStateValue } from \"../../StateProvider\";\nimport Order from '../order/Order';\n\nfunction Orders() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n    \n        if(user) {\n            db\n            .collection('users')\n            .doc(user?.uid)\n            .collection('orders')\n            .orderBy('created', 'desc')\n            .onSnapshot(snapshot => (\n                setOrders(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    data: doc.data()\n                })))\n            ))\n        } else {\n            setOrders([])\n            }\n    }, [user])\n\n    return (\n        <div className='orders'>\n            <h1>Your Orders</h1>\n            <div className='orders__order'>\n                {orders?.map(order => (\n                    <Order order={orders} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Orders\n","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\signup\\Signup.js",["111","112","113"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport \"./Signup.css\"\r\nimport { auth } from \"../../firebase\";\r\nimport { useFormik } from 'formik';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    name: yup\r\n      .string('Enter your name')\r\n      .min(3, \"Name must be at least 3 characters\")\r\n      .required('Name is Required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length')\r\n      .matches(\r\n        /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n        \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n      )\r\n      .required('Password is required'),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Please confirm your password\")\r\n      .when(\"password\", {\r\n        is: password => (password && password.length > 0 ? true : false),\r\n        then: yup.string().oneOf([yup.ref(\"password\")], \"Password doesn't match\")\r\n      })\r\n    });\r\n\r\nfunction Signup() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [confirmPassword, setConfirmPassword] = useState();\r\n    const [firstname, setFirstName ] = useState();\r\n    const [lastname, setLastName ] = useState();\r\n    const [showPassword, setShowPassword] = React.useState(false)\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword)\r\n    const handleMouseDownPassword = () => setShowPassword(!showPassword)\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema\r\n    })\r\n\r\n    const register = e => {\r\n    e.preventDefault();\r\n    auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((auth) => {\r\n            // it successfully created a new user with email and password\r\n            if (auth) {\r\n                history.push('/')\r\n            }\r\n        })\r\n        .catch(error => alert(error.message))\r\n}\r\n    return (\r\n        <div className=\"signup\" >     \r\n            <Link to=\"/\">\r\n                <img className=\"signup__logo\" src=\"/images/login-logo.png\" />\r\n            </Link>\r\n            <div className=\"signup_container\">\r\n                <h1>Sign up</h1>\r\n                <form>\r\n                  <TextField \r\n                      fullWidth\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      value={firstname}\r\n                      onChange={e => setFirstName(e.target.value)}\r\n                      error={formik.touched.name && Boolean(formik.errors.name)}\r\n                      helperText={formik.touched.name && formik.errors.name}\r\n                      style={{marginTop:'15'}}\r\n                  />\r\n\r\n                    {/* <h5>First-Name</h5>\r\n                    <input type=\"text\"  value={firstname} onChange={e => setFirstName(e.target.value)}/> */}\r\n\r\n                    {/* <h5>Last-Name</h5>\r\n                    <input type=\"text\"  value={lastname} onChange={e => setLastName(e.target.value)}/> */}\r\n                    \r\n                    {/* <h5>E-mail</h5>\r\n                    <input type=\"text\"  value={email} onChange={e => setEmail(e.target.value)}/> */}\r\n                  <TextField\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                      error={formik.touched.email && Boolean(formik.errors.email)}\r\n                      helperText={formik.touched.email && formik.errors.email}\r\n                      style={{marginTop:'15px'}}\r\n                  />\r\n                    {/* <h5>Password</h5>\r\n                    <input type=\"password\"  value={password} onChange={e => setPassword(e.target.value)}/> */}\r\n\r\n                    {/* <h5>Conform-Password</h5>\r\n                    <input type=\"password\"  /> */}\r\n\r\n                  <TextField\r\n                      fullWidth\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      value={password}\r\n                      onChange={e => setPassword(e.target.value)}\r\n                      error={formik.touched.password && Boolean(formik.errors.password)}\r\n                      helperText={formik.touched.password && formik.errors.password}\r\n                      style={{marginTop:'15px'}}\r\n                      InputProps={{\r\n                        // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                              onMouseDown={handleMouseDownPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                  <TextField\r\n                      fullWidth\r\n                      id=\"confirm-password\"\r\n                      name=\"confirmPassword\"\r\n                      label=\"Confirm Password\"\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      value={confirmPassword}\r\n                      onChange={e => setConfirmPassword(e.target.value)}\r\n                      error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                      helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                      style={{marginTop:'15px'}}\r\n                      InputProps={{\r\n                          // <-- This is where the toggle button is added.\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                              >\r\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                </form>\r\n\r\n                <p>  \r\n                    By signing-in you agree to the Conditions of Use & Sale. Please\r\n                    see our Privacy Notice, our Cookies Notice and our Interest-Based Ads Notice.\r\n                </p>\r\n\r\n                {/* <button onClick={register} className=\"signup_registerButton\">Create Your Amazon Account</button> */}\r\n                <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\" style={{marginTop:'15px'}} onClick={register} >\r\n                      Submit\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\axios.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\product\\Product.js",["114","115"],"import React from \"react\";\nimport \"./Product.css\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { useSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport { green, yellow } from '@material-ui/core/colors/';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {main: yellow[400]}\n  },\n});\n\nfunction Product({ id, title, image, price, rating }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n    const [{ basket }, dispatch] = useStateValue();\n\n    const addToBasket = (variant) => () => {\n      enqueueSnackbar('Added Successfully!', { variant });\n       // dispatch the item into the data layer\n        dispatch({\n            type: \"ADD_TO_BASKET\",\n            item: {\n                    id: id,\n                    title: title,\n                    image: image,\n                    price: price,\n                    rating: rating,\n                  },\n        });\n    };\n\n    return (\n        <div className=\"product\">\n          {/*product Image*/}\n          <img src={image} alt=\"\" />\n              {/*product rating*/}\n              <div className=\"product__rating\">\n                  {Array(rating)\n                    .fill()\n                    .map((_, i) => (\n                      <p>⭐</p>\n                    ))}\n              </div>\n                  {/*product Info*/}\n                  <div className=\"product__info\">\n                    <p>{title}</p>\n                     <p className=\"product__price\">\n                        <small>$</small>\n                        <strong>{price}</strong>\n                      </p>\n                  </div> \n                  <ThemeProvider theme={theme}>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.margin}  onClick={addToBasket('success')}>\n                      Add to basket\n                    </Button>\n                  </ThemeProvider>\n                     \n        </div>\n  );\n}\n\nexport default Product\n","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\checkout\\CheckoutProduct.js",[],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\subtotal\\Subtotal.js",["116","117"],"import React from 'react';\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { getBasketTotal } from '../../reducer';\nimport { useHistory } from 'react-router-dom';\n\nfunction Subtotal() {\n    const history = useHistory();\n    const [{ basket }, dispatch] = useStateValue();\n\n    return (\n        <div className=\"subtotal\">\n            <img src=\"https://images-eu.ssl-images-amazon.com/images/G/31/checkout/assets/TM_desktop._CB443006202_.png\" className=\"sub_img\"></img>\n                <CurrencyFormat \n                    renderText={(value) => (\n                        <div>\n                            <p>\n                                Subtotal ({basket.length} items):<strong>{ value }</strong>\n                            </p>\n                                <small className=\"subtotal__gift\">\n                                    <input type=\"checkbox\" />This order contains a gift\n                                </small>\n                        </div>\n                    )}\n                    decimalScale={2}\n                    value={getBasketTotal(basket)}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    prefix={\"$\"}\n                />\n            <button onClick={e => history.push('./payment')}>Proceed to Checkout</button>\n        </div>\n    );\n}\n\nexport default Subtotal;\n","C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\amazonpay\\header\\HeaderPay.js",["118"],"C:\\Users\\Sushil Choudhary\\Desktop\\ReactJS\\amazon-master\\src\\components\\amazonpay\\home\\HomePay.js",["119"],"import React from 'react'\r\nimport HeaderPay from '../header/HeaderPay';\r\nimport \"./HomePay.css\"\r\n\r\nfunction HomePay() {\r\n    return (\r\n        <div>\r\n            <HeaderPay />\r\n                <a href=\"https://www.sellerapp.com/blog/amazon-pay-seller-protection/\">\r\n                    <img src=\"https://www.sellerapp.com/blog/wp-content/uploads/2018/05/Amazon-Pay-pros-and-cons.png\" className=\"amazonpay_image\"/>\r\n                </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePay\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"120","replacedBy":"126"},{"ruleId":"122","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":45,"column":15,"nodeType":"130","messageId":"131","endLine":45,"endColumn":22},{"ruleId":"128","severity":1,"message":"132","line":12,"column":30,"nodeType":"130","messageId":"131","endLine":12,"endColumn":38},{"ruleId":"128","severity":1,"message":"132","line":9,"column":29,"nodeType":"130","messageId":"131","endLine":9,"endColumn":37},{"ruleId":"128","severity":1,"message":"133","line":8,"column":12,"nodeType":"130","messageId":"131","endLine":8,"endColumn":18},{"ruleId":"128","severity":1,"message":"132","line":8,"column":28,"nodeType":"130","messageId":"131","endLine":8,"endColumn":36},{"ruleId":"128","severity":1,"message":"134","line":45,"column":12,"nodeType":"130","messageId":"131","endLine":45,"endColumn":20},{"ruleId":"128","severity":1,"message":"135","line":45,"column":22,"nodeType":"130","messageId":"131","endLine":45,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":69,"column":17,"nodeType":"138","endLine":69,"endColumn":78},{"ruleId":"128","severity":1,"message":"139","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":15},{"ruleId":"128","severity":1,"message":"133","line":24,"column":14,"nodeType":"130","messageId":"131","endLine":24,"endColumn":20},{"ruleId":"128","severity":1,"message":"132","line":10,"column":24,"nodeType":"130","messageId":"131","endLine":10,"endColumn":32},{"ruleId":"136","severity":1,"message":"137","line":14,"column":13,"nodeType":"138","endLine":14,"endColumn":141},{"ruleId":"136","severity":1,"message":"137","line":9,"column":17,"nodeType":"138","endLine":9,"endColumn":174},{"ruleId":"136","severity":1,"message":"137","line":10,"column":21,"nodeType":"138","endLine":10,"endColumn":148},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],["140"],["141"],"no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'basket' is assigned a value but never used.","'lastname' is assigned a value but never used.","'setLastName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'green' is defined but never used.","no-global-assign","no-unsafe-negation"]